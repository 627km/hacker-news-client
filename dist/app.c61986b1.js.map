{"version":3,"sources":["app.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA,IAAM,SAAS,GAAuB,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC;AACrE,IAAM,IAAI,GAAmB,IAAI,cAAc,CAAA,CAAE;AACjD,IAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC;AAC7C,IAAM,QAAQ,GAAG,sCAAsC;AACvD,IAAM,WAAW,GAAG,wCAAwC;AAC5D,IAAI,KAAK,GAAU;EACf,WAAW,EAAE,CAAC;EACd,KAAK,EAAE;CACV;AAED;AACA,SAAS,cAAc,CAAC,WAAgB,EAAE,WAAkB,EAAA;EACxD,WAAW,CAAC,OAAO,CAAC,UAAC,SAAS,EAAA;IAC1B,MAAM,CAAC,mBAAmB,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,UAAC,IAAI,EAAA;MACzD,IAAM,UAAU,GAAG,MAAM,CAAC,wBAAwB,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC;MAE7E,IAAI,UAAU,EAAE;QACZ,MAAM,CAAC,cAAc,CAAC,WAAW,CAAC,SAAS,EAAE,IAAI,EAAE,UAAU,CAAC;MAClE;IACJ,CAAC,CAAC;EACN,CAAC,CAAC;AACN;AAEA,IAAA,GAAA,GAAA,aAAA,YAAA;EAAA,SAAA,GAAA,CAAA,EAAA,CAQA;EAPI,GAAA,CAAA,SAAA,CAAA,UAAU,GAAV,UAAyB,GAAW,EAAA;IAChC,IAAM,IAAI,GAAG,IAAI,cAAc,CAAA,CAAE;IACjC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,EAAE,KAAK,CAAC;IAC5B,IAAI,CAAC,IAAI,CAAA,CAAE;IAEX,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC;EACpC,CAAC;EACL,OAAA,GAAC;AAAD,CARA,CAAA,CAAA;AAUA,IAAA,WAAA,GAAA,aAAA,YAAA;EAAA,SAAA,WAAA,CAAA,EAAA,CAIA;EAHI,WAAA,CAAA,SAAA,CAAA,OAAO,GAAP,YAAA;IACI,OAAO,IAAI,CAAC,UAAU,CAAa,QAAQ,CAAC;EAChD,CAAC;EACL,OAAA,WAAC;AAAD,CAJA,CAAA,CAAA;AAMA,IAAA,aAAA,GAAA,aAAA,YAAA;EAAA,SAAA,aAAA,CAAA,EAAA,CAIA;EAHI,aAAA,CAAA,SAAA,CAAA,OAAO,GAAP,UAAQ,EAAU,EAAA;IACd,OAAO,IAAI,CAAC,UAAU,CAAa,WAAW,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;EACtE,CAAC;EACL,OAAA,aAAC;AAAD,CAJA,CAAA,CAAA;AASA,cAAc,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC;AAClC,cAAc,CAAC,aAAa,EAAE,CAAC,GAAG,CAAC,CAAC;AAEpC,IAAA,IAAA,GAAA,aAAA,YAAA;EAMI,SAAA,IAAA,CAAY,WAAmB,EAAE,QAAgB,EAAA;IAC7C,IAAM,gBAAgB,GAAG,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC;IAE7D,IAAI,CAAC,gBAAgB,EAAE;MACnB,MAAM,6BAA6B;IACvC;IACA,IAAI,CAAC,SAAS,GAAG,gBAAgB;IACjC,IAAI,CAAC,QAAQ,GAAG,QAAQ;IACxB,IAAI,CAAC,cAAc,GAAG,QAAQ;IAC9B,IAAI,CAAC,QAAQ,GAAG,EAAE;EACtB;EAEU,IAAA,CAAA,SAAA,CAAA,UAAU,GAApB,YAAA;IACI,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc;IAC9C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ;EACvC,CAAC;EAES,IAAA,CAAA,SAAA,CAAA,OAAO,GAAjB,UAAkB,UAAkB,EAAA;IAChC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC;EAClC,CAAC;EAES,IAAA,CAAA,SAAA,CAAA,OAAO,GAAjB,YAAA;IACI,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC;IACvC,IAAI,CAAC,aAAa,CAAA,CAAE;IACpB,OAAO,QAAQ;EACnB,CAAC;EAES,IAAA,CAAA,SAAA,CAAA,eAAe,GAAzB,UAA0B,GAAW,EAAE,KAAa,EAAA;IAChD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,MAAA,CAAA,MAAA,CAAO,GAAG,EAAA,MAAA,CAAM,EAAE,KAAK,CAAC;EAC9E,CAAC;EAEO,IAAA,CAAA,SAAA,CAAA,aAAa,GAArB,YAAA;IACI,IAAI,CAAC,QAAQ,GAAG,EAAE;EACtB,CAAC;EAGL,OAAA,IAAC;AAAD,CA1CA,CAAA,CAAA;AA4CA,IAAA,MAAA,GAAA,aAAA,YAAA;EAGI,SAAA,MAAA,CAAA,EAAA;IACI,MAAM,CAAC,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5D,IAAI,CAAC,UAAU,GAAG,EAAE;IACpB,IAAI,CAAC,YAAY,GAAG,IAAI;EAC5B;EACA,MAAA,CAAA,SAAA,CAAA,cAAc,GAAd,UAAe,IAAU,EAAA;IACrB,IAAI,CAAC,YAAY,GAAG;MAChB,IAAI,EAAE,EAAE;MACR,IAAI,EAAA;KACP;EACL,CAAC;EACD,MAAA,CAAA,SAAA,CAAA,YAAY,GAAZ,UAAa,IAAY,EAAE,IAAU,EAAA;IACjC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;MACjB,IAAI,EAAA,IAAA;MACJ,IAAI,EAAA;KACP,CAAC;EACN,CAAC;EAED,MAAA,CAAA,SAAA,CAAA,KAAK,GAAL,YAAA;;IACI,IAAM,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;IACjC,IAAI,SAAS,KAAK,EAAE,IAAI,IAAI,CAAC,YAAY,EAAE;MACvC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAA,CAAE;IACnC;;MAEA,KAAwB,IAAA,EAAA,GAAA,QAAA,CAAA,IAAI,CAAC,UAAU,CAAA,EAAA,EAAA,GAAA,EAAA,CAAA,IAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,CAAA,IAAA,CAAA,CAAA,EAAE;QAApC,IAAM,SAAS,GAAA,EAAA,CAAA,KAAA;QAChB,IAAI,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;UACxC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAA,CAAE;UACvB;QACJ;MACJ;;;;;;;;;;;;EACJ,CAAC;EACL,OAAA,MAAC;AAAD,CAlCA,CAAA,CAAA;AAoCA,IAAA,YAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAA2B,SAAA,CAAA,YAAA,EAAA,MAAA,CAAA;EAIvB,SAAA,YAAA,CAAY,WAAmB,EAAA;IAA/B,IAAA,KAAA,GAAA,IAAA;IACI,IAAI,QAAQ,GAAG,slCAuBd;IACD,KAAA,GAAA,MAAK,CAAA,IAAA,CAAA,IAAA,EAAC,WAAW,EAAE,QAAQ,CAAC,IAAA,IAAA;IAE5B,KAAI,CAAC,GAAG,GAAG,IAAI,WAAW,CAAA,CAAE;IAC5B,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK;IAExB,IAAI,KAAI,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;MACzB,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,GAAG,KAAI,CAAC,GAAG,CAAC,OAAO,CAAA,CAAE;MAC7C,KAAI,CAAC,SAAS,CAAA,CAAE;IACpB;;EACJ;EAEA,YAAA,CAAA,SAAA,CAAA,MAAM,GAAN,YAAA;IACI,KAAK,CAAC,WAAW,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAC3D,KAAK,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,GAAG,KAAK,CAAC,WAAW,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;MACxE;MACM,IAAA,EAAA,GAA8D,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QAAzE,EAAE,GAAA,EAAA,CAAA,EAAA;QAAE,KAAK,GAAA,EAAA,CAAA,KAAA;QAAE,cAAc,GAAA,EAAA,CAAA,cAAA;QAAE,IAAI,GAAA,EAAA,CAAA,IAAA;QAAE,MAAM,GAAA,EAAA,CAAA,MAAA;QAAE,QAAQ,GAAA,EAAA,CAAA,QAAA;QAAE,IAAI,GAAA,EAAA,CAAA,IAAkB;MACjF,IAAI,CAAC,OAAO,CAAC,qCAAA,CAAA,MAAA,CACS,IAAI,GAAG,YAAY,GAAG,UAAU,EAAA,6NAAA,CAAA,CAAA,MAAA,CAGpB,EAAE,EAAA,KAAA,CAAA,CAAA,MAAA,CAAK,KAAK,EAAA,oMAAA,CAAA,CAAA,MAAA,CAGmC,cAAc,EAAA,4QAAA,CAAA,CAAA,MAAA,CAKxC,IAAI,EAAA,8EAAA,CAAA,CAAA,MAAA,CACH,MAAM,EAAA,8EAAA,CAAA,CAAA,MAAA,CACN,QAAQ,EAAA,yGAAA,CAInE,CAAC;IACF;IAEA,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,IAAI,CAAC,OAAO,CAAA,CAAE,CAAC;IACjD,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,MAAM,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,GAAG,KAAK,CAAC,WAAW,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IAC5F,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,MAAM,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;IAEhE,IAAI,CAAC,UAAU,CAAA,CAAE;EACrB,CAAC;EACO,YAAA,CAAA,SAAA,CAAA,SAAS,GAAjB,YAAA;IACI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;MACxC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,KAAK;IAC9B;EACJ,CAAC;EACL,OAAA,YAAC;AAAD,CA7EA,CAA2B,IAAI,CAAA;AA+E/B,IAAA,cAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAA6B,SAAA,CAAA,cAAA,EAAA,MAAA,CAAA;EACzB,SAAA,cAAA,CAAY,WAAmB,EAAA;IAC3B,IAAI,QAAQ,GAAG,u8BA2Bd;IACD,OAAA,MAAK,CAAA,IAAA,CAAA,IAAA,EAAC,WAAW,EAAE,QAAQ,CAAC,IAAA,IAAA;EAChC;EAEA,cAAA,CAAA,SAAA,CAAA,MAAM,GAAN,YAAA;IACI,IAAM,EAAE,GAAG,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IACrC,IAAM,GAAG,GAAG,IAAI,aAAa,CAAA,CAAE;IAC/B,IAAM,UAAU,GAAe,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC;IAE9C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;MACzC,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,MAAM,CAAC,EAAE,CAAC,EAAE;QAClC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI;QAC1B;MACJ;IACJ;IACA,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;IACvE,IAAI,CAAC,eAAe,CAAC,aAAa,EAAE,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;IAC9D,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,UAAU,CAAC,KAAK,CAAC;IAC/C,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,UAAU,CAAC,OAAO,CAAC;IAEnD,IAAI,CAAC,UAAU,CAAA,CAAE;EACrB,CAAC;EAED,cAAA,CAAA,SAAA,CAAA,WAAW,GAAX,UAAY,QAAuB,EAAA;IAC/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;MACtC,IAAM,OAAO,GAAgB,QAAQ,CAAC,CAAC,CAAC;MAExC,IAAI,CAAC,OAAO,CAAC,+CAAA,CAAA,MAAA,CACmB,OAAO,CAAC,KAAK,GAAG,EAAE,EAAA,yKAAA,CAAA,CAAA,MAAA,CAG5B,OAAO,CAAC,IAAI,EAAA,YAAA,CAAA,CAAA,MAAA,CAAa,OAAO,CAAC,QAAQ,EAAA,+EAAA,CAAA,CAAA,MAAA,CAE5B,OAAO,CAAC,OAAO,EAAA,4CAAA,CAEjD,CAAC;MAEF;MACA,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;QAC7B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;MACtD;IACJ;IACA,OAAO,IAAI,CAAC,OAAO,CAAA,CAAE;EACzB,CAAC;EACL,OAAA,cAAC;AAAD,CAzEA,CAA6B,IAAI,CAAA;AA2EjC,IAAM,MAAM,GAAW,IAAI,MAAM,CAAA,CAAE;AACnC,IAAM,YAAY,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC;AAC7C,IAAM,cAAc,GAAG,IAAI,cAAc,CAAC,MAAM,CAAC;AAEjD,MAAM,CAAC,cAAc,CAAC,YAAY,CAAC;AAEnC,MAAM,CAAC,YAAY,CAAC,QAAQ,EAAE,YAAY,CAAC;AAC3C,MAAM,CAAC,YAAY,CAAC,QAAQ,EAAE,cAAc,CAAC;AAE7C,MAAM,CAAC,KAAK,CAAA,CAAE","file":"app.c61986b1.js","sourceRoot":"..","sourcesContent":["// 타입 알리아스 (type alias)\ninterface Store {\n    currentPage: number;\n    feeds: NewsFeed[];\n}\n\n// 중복 된 타입\ninterface News {\n    readonly id: number;\n    readonly time_ago: string;\n    readonly title: string;\n    readonly url: string;\n    readonly user: string;\n    readonly content: string;\n}\n\ninterface NewsFeed extends News {\n    readonly comments_count: number;\n    readonly points: number;\n    read?: boolean; // ?를 붙이면 항상있는 것이 아닌 선택적으로 있는 데이터라는 의미이다.\n}\n\ninterface NewsDetail extends News {\n    readonly comments: NewsComment[];\n}\n\ninterface NewsComment extends News {\n    readonly comments: NewsComment[];\n    readonly level: number;\n}\n\ninterface RouteInfo {\n    path: string;\n    page: View;\n}\n\nconst container: HTMLElement | null = document.getElementById(\"root\");\nconst ajax: XMLHttpRequest = new XMLHttpRequest();\nconst content = document.createElement(\"div\");\nconst NEWS_URL = \"https://api.hnpwa.com/v0/news/1.json\";\nconst CONTENT_URL = \"https://api.hnpwa.com/v0/item/@id.json\";\nlet store: Store = {\n    currentPage: 1,\n    feeds: [],\n};\n\n// targetClass로 제공 된 class에다가 baseClasses들을 합성시키는 코드\nfunction applyApiMixins(targetClass: any, baseClasses: any[]): void {\n    baseClasses.forEach((baseClass) => {\n        Object.getOwnPropertyNames(baseClass.prototype).forEach((name) => {\n            const descriptor = Object.getOwnPropertyDescriptor(baseClass.prototype, name);\n\n            if (descriptor) {\n                Object.defineProperty(targetClass.prototype, name, descriptor);\n            }\n        });\n    });\n}\n\nclass Api {\n    getRequest<AjaxResponse>(url: string): AjaxResponse {\n        const ajax = new XMLHttpRequest();\n        ajax.open(\"GET\", url, false);\n        ajax.send();\n\n        return JSON.parse(ajax.response);\n    }\n}\n\nclass NewsFeedApi {\n    getData(): NewsFeed[] {\n        return this.getRequest<NewsFeed[]>(NEWS_URL);\n    }\n}\n\nclass NewsDetailApi {\n    getData(id: string): NewsDetail {\n        return this.getRequest<NewsDetail>(CONTENT_URL.replace(\"@id\", id));\n    }\n}\n\ninterface NewsFeedApi extends Api {}\ninterface NewsDetailApi extends Api {}\n\napplyApiMixins(NewsFeedApi, [Api]);\napplyApiMixins(NewsDetailApi, [Api]);\n\nabstract class View {\n    private template: string;\n    private renderTemplate: string;\n    private container: HTMLElement;\n    private htmlList: string[];\n\n    constructor(containerId: string, template: string) {\n        const containerElement = document.getElementById(containerId);\n\n        if (!containerElement) {\n            throw \"최상위 컨테이너가 없어 UI를 진행하지 못합니다.\";\n        }\n        this.container = containerElement;\n        this.template = template;\n        this.renderTemplate = template;\n        this.htmlList = [];\n    }\n\n    protected updateView(): void {\n        this.container.innerHTML = this.renderTemplate;\n        this.renderTemplate = this.template;\n    }\n\n    protected addHtml(htmlString: string): void {\n        this.htmlList.push(htmlString);\n    }\n\n    protected getHtml(): string {\n        const snapshot = this.htmlList.join(\"\");\n        this.clearHtmlList();\n        return snapshot;\n    }\n\n    protected setTemplateData(key: string, value: string): void {\n        this.renderTemplate = this.renderTemplate.replace(`{{__${key}__}}`, value);\n    }\n\n    private clearHtmlList(): void {\n        this.htmlList = [];\n    }\n\n    abstract render(): void; // 자식 클래스에서 반드시 구현해야 됨\n}\n\nclass Router {\n    routeTable: RouteInfo[];\n    defaultRoute: RouteInfo | null;\n    constructor() {\n        window.addEventListener(\"hashchange\", this.route.bind(this));\n        this.routeTable = [];\n        this.defaultRoute = null;\n    }\n    setDefaultPage(page: View): void {\n        this.defaultRoute = {\n            path: \"\",\n            page,\n        };\n    }\n    addRoutePath(path: string, page: View): void {\n        this.routeTable.push({\n            path,\n            page,\n        });\n    }\n\n    route() {\n        const routePath = location.hash; // location.hash에 '#'만 들어있을 떄는 빈 값을 반환한다.\n        if (routePath === \"\" && this.defaultRoute) {\n            this.defaultRoute.page.render();\n        }\n\n        for (const routeInfo of this.routeTable) {\n            if (routePath.indexOf(routeInfo.path) >= 0) {\n                routeInfo.page.render();\n                break;\n            }\n        }\n    }\n}\n\nclass NewsFeedView extends View {\n    private api: NewsFeedApi;\n    private feeds: NewsFeed[];\n\n    constructor(containerId: string) {\n        let template = `\n            <div class=\"bg-gray-600 min-h-screen\">\n                <div class=\"bg-white text-xl\">\n                    <div class=\"mx-auto px-4\">\n                        <div class=\"flex justify-between items-center py-6\">\n                            <div class=\"flex justify-start\">\n                                <h1 class=\"font-extrabold\">Hacker News</h1>\n                            </div>\n                            <div class=\"items-center justify-end\">\n                                <a href=\"#/page/{{__prev_page__}}\" class=\"text-gray-500\">\n                                    Previous\n                                </a>\n                                <a href=\"#/page/{{__next_page__}}\" class=\"text-gray-500 ml-4\">\n                                    Next\n                                </a>\n                            </div>\n                        </div> \n                    </div>\n                </div>\n            <div class=\"p-4 text-2xl text-gray-700\">\n                {{__news_feed__}}        \n            </div>\n        </div>\n        `;\n        super(containerId, template);\n\n        this.api = new NewsFeedApi();\n        this.feeds = store.feeds;\n\n        if (this.feeds.length === 0) {\n            this.feeds = store.feeds = this.api.getData();\n            this.makeFeeds();\n        }\n    }\n\n    render(): void {\n        store.currentPage = Number(location.hash.substring(7) || 1);\n        for (let i = (store.currentPage - 1) * 10; i < store.currentPage * 10; i++) {\n            // 구조분해 할당 문법\n            const { id, title, comments_count, user, points, time_ago, read } = this.feeds[i];\n            this.addHtml(`\n                <div class=\"p-6 ${read ? \"bg-red-500\" : \"bg-white\"} mt-6 rounded-lg shadow-md transition-colors duration-500 hover:bg-green-100\">\n                    <div class=\"flex\">\n                        <div class=\"flex-auto\">\n                            <a href=\"#/show/${id}\">${title}</a>  \n                        </div>\n                        <div class=\"text-center text-sm\">\n                            <div class=\"w-10 text-white bg-green-300 rounded-lg px-0 py-2\">${comments_count}</div>\n                        </div>\n                    </div>\n                        <div class=\"flex mt-3\">\n                        <div class=\"grid grid-cols-3 text-sm text-gray-500\">\n                            <div><i class=\"fas fa-user mr-1\"></i>${user}</div>\n                            <div><i class=\"fas fa-heart mr-1\"></i>${points}</div>\n                            <div><i class=\"far fa-clock mr-1\"></i>${time_ago}</div>\n                        </div>  \n                    </div>\n                </div> \n        `);\n        }\n\n        this.setTemplateData(\"news_feed\", this.getHtml());\n        this.setTemplateData(\"prev_page\", String(store.currentPage > 1 ? store.currentPage - 1 : 1));\n        this.setTemplateData(\"next_page\", String(store.currentPage + 1));\n\n        this.updateView();\n    }\n    private makeFeeds(): void {\n        for (let i = 0; i < this.feeds.length; i++) {\n            this.feeds[i].read = false;\n        }\n    }\n}\n\nclass NewsDetailView extends View {\n    constructor(containerId: string) {\n        let template = `\n            <div class=\"bg-gray-600 min-h-screen pb-8\">\n            <div class=\"bg-white text-xl\">\n            <div class=\"mx-auto px-4\">\n                <div class=\"flex justify-between items-center py-6\">\n                <div class=\"flex justify-start\">\n                    <h1 class=\"font-extrabold\">Hacker News</h1>\n                </div>\n                <div class=\"items-center justify-end\">\n                    <a href=\"#/page/{{__currentPage__}}\" class=\"text-gray-500\">\n                    <i class=\"fa fa-times\"></i>\n                    </a>\n                </div>\n                </div>\n            </div>\n            </div>\n\n            <div class=\"h-full border rounded-xl bg-white m-6 p-4 \">\n            <h2>{{__title__}}</h2>\n            <div class=\"text-gray-400 h-20\">\n                {{__content__}}\n            </div>\n\n            {{__comments__}}\n\n            </div>\n            </div>\n        `;\n        super(containerId, template);\n    }\n\n    render() {\n        const id = location.hash.substring(7);\n        const api = new NewsDetailApi();\n        const newsDetail: NewsDetail = api.getData(id);\n\n        for (let i = 0; i < store.feeds.length; i++) {\n            if (store.feeds[i].id === Number(id)) {\n                store.feeds[i].read = true;\n                break;\n            }\n        }\n        this.setTemplateData(\"comments\", this.makeComment(newsDetail.comments));\n        this.setTemplateData(\"currentPage\", String(store.currentPage));\n        this.setTemplateData(\"title\", newsDetail.title);\n        this.setTemplateData(\"content\", newsDetail.content);\n\n        this.updateView();\n    }\n\n    makeComment(comments: NewsComment[]): string {\n        for (let i = 0; i < comments.length; i++) {\n            const comment: NewsComment = comments[i];\n\n            this.addHtml(`\n                <div style=\"padding-left: ${comment.level * 40}px;\" class=\"mt-4\">\n                    <div class=\"text-gray-400\">\n                       <i class=\"fa fa-sort-up mr-2\"></i>\n                        <strong>${comment.user}</strong> ${comment.time_ago}\n                    </div>\n                    <p class=\"text-gray-700\">${comment.content}</p>\n                </div>\n            `);\n\n            // 대댓글이 있는 경우\n            if (comment.comments.length > 0) {\n                this.addHtml(this.makeComment(comment.comments)); // 재귀호출\n            }\n        }\n        return this.getHtml();\n    }\n}\n\nconst router: Router = new Router();\nconst newsFeedView = new NewsFeedView(\"root\");\nconst newsDetailView = new NewsDetailView(\"root\");\n\nrouter.setDefaultPage(newsFeedView);\n\nrouter.addRoutePath(\"/page/\", newsFeedView);\nrouter.addRoutePath(\"/show/\", newsDetailView);\n\nrouter.route();\n"]}